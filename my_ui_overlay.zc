class MyUIOverlay : StaticEventHandler
{
    ui PanelPlayer panel;
    ui bool   bShow, inConversation;
    ui int    holdTics, fadeOutTics;

    ui int hb;
    ui int hbTimeout;     

    ui void Heartbeat() { hb = hbTimeout; }
    ui static void HeartbeatStatic() { let o = Get(); if (o) o.Heartbeat(); }

    ui int MsToTics(int ms) { return (ms * TICRATE + 999) / 1000; }

    ui void Ensure()
    {
        if (hbTimeout == 0) hbTimeout = 2;

        if (panel == null)
        {
            panel = new("PanelPlayer");
            panel.PreloadOnce();
        }
    }

    ui void BeginConversation() { inConversation = true; }

    ui void EndConversation(int fadeMs = 10)
    {
        inConversation = false;
        fadeOutTics = MsToTics(fadeMs);
        bShow = false;
        holdTics = 0;
    }

    ui void ShowAnimInst(String clip)  { 
		
		Ensure(); 
		bShow = true; 
		holdTics = 0; 
		panel.PlayAnimChar(clip); 
	}
	
    ui void HideInst()                 { bShow = false; holdTics = 0; }

    override void UiTick()
    {
        if (hb > 0) hb--;
        if (inConversation && hb == 0) EndConversation(120);

        if (!jm_anim_enabled) { bShow = false; holdTics = 0; inConversation = false; fadeOutTics = 0; return; }

        Ensure();
        if (panel != null && jm_anim_play) panel.Tick();

        if (holdTics > 0) holdTics--;
        if (!inConversation && fadeOutTics > 0) fadeOutTics--;

    }

    // ---- Rendering the panel ----
	override void RenderOverlay(RenderEvent e)
    {
        if (!jm_anim_enabled) return;
        bool visible = inConversation || (holdTics > 0) || (fadeOutTics > 0);
        if (!visible || panel == null) return;
        panel.Draw();
    }

    ui void ShowVoiceInst(Name voice)
    {
        Ensure();
        if (panel)
        {
            // лениво определяем персонажа и регистрируем его клипы (по voice-префиксу)
            panel.PlayForVoice(voice);      // ← panel сама: EnsureCharacterForVoice -> PlayAnimChar
            bShow = true;
            holdTics = 0;
            inConversation = true;
            Heartbeat();                     // продлеваем жизнь панели
        }
    }

    // Иногда удобно просто «idle» для текущего персонажа:
    ui void ShowIdleInst()
    {
        Ensure();
        if (panel)
        {
            panel.PlayAnimChar("idle");      // JIM.idle / PORKY.idle …
            bShow = true;
            inConversation = true;
            Heartbeat();
        }
    }



    // ---- статические обёртки (UI) ----
    ui static MyUIOverlay Get()                      { return MyUIOverlay(StaticEventHandler.Find("MyUIOverlay")); }
    ui static void BeginConversationStatic()         { let o = Get(); if (o) o.BeginConversation(); }
    ui static void EndConversationStatic(int ms=120) { let o = Get(); if (o) o.EndConversation(ms); }
    ui static void ShowAnimStatic(String clip)       { let o = Get(); if (o) o.ShowAnimInst(clip); }
    ui static void HideStatic()                      { let o = Get(); if (o) o.HideInst(); }
    ui static void EnsureStatic()                      { let o = Get(); if (o) o.Ensure(); }

    ui static void ShowVoiceStatic(String voice)  { let o = Get(); if (o) o.ShowVoiceInst(voice); }
    ui static void ShowIdleStatic()             { let o = Get(); if (o) o.ShowIdleInst(); }
}